---
###############################################################################
# Deluge
###############################################################################
# The debian install creates a 'debianize' version of the deluge install:
#   * debian-deluged user
#   * /etc/init.d/deluged initscript
#   * /var/lib/deluged
#
# We create our own /var/lib/deluge directory to run as the media user,
# including systemd scripts for running the service under media. The debianized
# install is untouched so the package may be upgraded as needed.
#
# With no configuration, the default password is 'deluge'.
#
# Reference:
# * https://deluge-torrent.org/
# * https://deluge.readthedocs.io/en/latest/how-to/systemd-service.html
# * https://archlinuxarm.org/forum/viewtopic.php?f=30&t=7729
# * https://linuxconfig.org/set-up-a-headless-deluge-server-on-linux
# * https://serverfault.com/questions/22414/how-can-i-run-debian-stable-but-install-some-packages-from-testing

- ansible.builtin.include_tasks: manage_users.yml

- name: 'install | enable {{ deluge_package_source }} repository'
  ansible.builtin.apt_repository:
    repo:     'deb http://ftp.debian.org/debian {{ deluge_package_source }} main contrib non-free'
    filename: 'testing'
    update_cache: true
    state:    'present'
  when: deluge_package_source != 'current'

- name: 'install | ensure apt pinning disabled'
  ansible.builtin.file:
    dest:  '/etc/apt/preferences'
    state: 'absent'
  when: deluge_package_source == 'current'

- name: 'install | force apt preference stable > {{ deluge_package_source }} > unstable'
  ansible.builtin.template:
    src:   'preferences.j2'
    dest:  '/etc/apt/preferences'
    owner: 'root'
    group: 'root'
    mode:  0644
  when: deluge_package_source != 'current'

- name: 'install | install from {{ deluge_package_source }}'
  ansible.builtin.apt:
    name:  '{{ deluge_default_packages }}'
    default_release: '{% if deluge_package_source != "current" %}{{ deluge_package_source }}{% else %}{% endif %}'
    update_cache: true
    install_recommends: true
    state: 'latest'
  notify:
    - 'restart deluge'
    - 'restart deluge-web'

- name: 'install | redirect debian deluge version'
  ansible.builtin.copy:
    dest:    '{{ item }}'
    content: 'Debian deluge version. You want /var/{log,lib}/deluge'
    owner:   'debian-deluged'
    group:   'debian-deluged'
    mode:    0644
  loop:
    - '/var/lib/deluged/README.md'
    - '/var/log/deluged/README.md'

- name: 'install | create custom dirs to run under {{ deluge_user }}'
  ansible.builtin.file:
    dest:    '{{ item }}'
    owner:   '{{ deluge_user }}'
    group:   '{{ deluge_group }}'
    mode:    'o-rwx'
    recurse: true
    state:   'directory'
  loop:
    - '{{ deluge_log }}'
    - '{{ deluge_config }}'

# Reference: defaults/main/web.conf for setting new password
- name: 'install | set configuration'
  ansible.builtin.template:
    src:   '{{ item.src }}'
    dest:  '{{ item.dest }}'
    owner: '{{ deluge_user }}'
    group: '{{ deluge_group }}'
    mode:  0600 #0664 originally
  loop:
    - {src: 'core.conf.j2',    dest: '{{ deluge_config }}/core.conf'}
    - {src: 'autoadd.conf.j2', dest: '{{ deluge_config }}/autoadd.conf'}
    - {src: 'web.conf.j2',     dest: '{{ deluge_config }}/web.conf'}
  notify:
    - 'restart deluge'
    - 'restart deluge-web'

- name: 'install | create custom systemd services'
  ansible.builtin.template:
    src:   '{{ item.src }}'
    dest:  '{{ item.dest }}'
    owner: 'root'
    group: 'root'
    mode:  0755
  loop:
    - {src: 'deluge.service.j2',     dest: '/etc/systemd/system/deluge.service'}
    - {src: 'deluge-web.service.j2', dest: '/etc/systemd/system/deluge-web.service'}
  notify:
    - 'reload systemd'

- name: 'install | restart deluge service daily'
  ansible.builtin.cron:
    name:         'restart deluge service daily'
    special_time: 'daily'
    user:         'root'
    job:          'service deluge restart; service deluge-web restart'
    state:        'present'

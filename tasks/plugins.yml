---
# yamllint disable rule:line-length
###############################################################################
# Configure Deluge Plugins
###############################################################################
# All pre-existing directories should be created in config; only configure
# specific plugins if they are enabled (e.g. values are specified).
#
# WebUI plugin not supported (deluge-web is the WebUI plugin).
#
# Leaving plugin configurations after being disabled does not affect Deluge.
#
# Reference:
# * https://dev.deluge-torrent.org/ticket/3303

- name: 'Plugins | copy custom plugins'
  when: _deluge_cfg_core_install_plugins_source.raw | length > 0
  block:
    - name: 'Plugins | copy custom plugins | copy'
      ansible.posix.synchronize:
        src: '{{ _deluge_cfg_core_install_plugins_source._src }}'
        dest: '{{ _deluge_cfg_core_plugins_location.raw }}'
        delete: true
        recursive: true
        archive: false
        checksum: true

    - name: 'Plugins | copy custom plugins | set permissions'
      ansible.builtin.shell:
        chown -R {{ _deluge_srv_user._uid }}:{{ _deluge_srv_group._gid }} '{{ _deluge_cfg_core_plugins_location.raw }}' &&
        find '{{ _deluge_cfg_core_plugins_location.raw }}' -type d -exec chmod 0770 {} \; &&
        find '{{ _deluge_cfg_core_plugins_location.raw }}' -type f -exec chmod 0660 {} \;
      changed_when: false

- name: 'Plugins | set autoadd.conf'
  ansible.builtin.template:
    src: 'plugins/autoadd.conf.j2'
    dest: '{{ _deluge_srv_config_dir._config_dir ~ "autoadd.conf" }}'
    owner: '{{ _deluge_srv_user._uid }}'
    group: '{{ _deluge_srv_group._gid }}'
    mode: '0600'

- name: 'Plugins | set blocklist.conf'
  when: _deluge_cfg_plugins_blocklist.raw | length > 0
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ _deluge_srv_config_dir._config_dir ~ item.dest }}'
    owner: '{{ _deluge_srv_user._uid }}'
    group: '{{ _deluge_srv_group._gid }}'
    mode: '0600'
  loop:
    - {src: 'plugins/blocklist.conf.j2', dest: 'blocklist.conf'}
    - {src: 'plugins/blocklist.download.j2', dest: 'blocklist.download'}
  loop_control:
    label: '{{ item.dest }}'

- name: 'Plugins | execute'
  when: _deluge_cfg_plugins_execute_source.raw | length > 0
  block:
    - name: 'Plugins | execute | copy scripts'
      ansible.posix.synchronize:
        src: '{{ _deluge_cfg_plugins_execute_source._src }}'
        dest: '{{ _deluge_srv_config_dir._config_dir ~ "scripts" }}'
        delete: true
        recursive: true
        archive: false
        checksum: true

    - name: 'Plugins | execute | set permissions'
      ansible.builtin.shell:
        chown -R {{ _deluge_srv_user._uid }}:{{ _deluge_srv_group._gid }} '{{ _deluge_srv_config_dir._config_dir ~ "scripts" }}' &&
        find '{{ _deluge_srv_config_dir._config_dir ~ "scripts" }}' -type f -exec chmod 0750 {} \;
      changed_when: false

    # Execute plugin set in root config directory.
    - name: 'Plugins | execute | set execute.conf'
      ansible.builtin.template:
        src: 'plugins/execute.conf.j2'
        dest: '{{ _deluge_srv_config_dir._config_dir ~ "execute.conf" }}'
        owner: '{{ _deluge_srv_user._uid }}'
        group: '{{ _deluge_srv_group._gid }}'
        mode: '0600'

- name: 'Plugins | set extractor.conf'
  when: _deluge_cfg_plugins_extractor.raw | length > 0
  ansible.builtin.template:
    src: 'plugins/extractor.conf.j2'
    dest: '{{ _deluge_srv_config_dir._config_dir ~ "extractor.conf" }}'
    owner: '{{ _deluge_srv_user._uid }}'
    group: '{{ _deluge_srv_group._gid }}'
    mode: '0600'

- name: 'Plugins | set label.conf'
  when: _deluge_cfg_plugins_label.raw | length > 0
  ansible.builtin.template:
    src: 'plugins/label.conf.j2'
    dest: '{{ _deluge_srv_config_dir._config_dir ~ "label.conf" }}'
    owner: '{{ _deluge_srv_user._uid }}'
    group: '{{ _deluge_srv_group._gid }}'
    mode: '0600'

- name: 'Plugins | set scheduler.conf'
  when: _deluge_cfg_plugins_scheduler | length > 0
  ansible.builtin.template:
    src: 'plugins/scheduler.conf.j2'
    dest: '{{ _deluge_srv_config_dir._config_dir ~ "scheduler.conf" }}'
    owner: '{{ _deluge_srv_user._uid }}'
    group: '{{ _deluge_srv_group._gid }}'
    mode: '0600'

- name: 'Plugins | set notifications-core.conf'
  ansible.builtin.template:
    src: 'plugins/notifications-core.conf.j2'
    dest: '{{ _deluge_srv_config_dir._config_dir ~ "notifications-core.conf" }}'
    owner: '{{ _deluge_srv_user._uid }}'
    group: '{{ _deluge_srv_group._gid }}'
    mode: '0600'
